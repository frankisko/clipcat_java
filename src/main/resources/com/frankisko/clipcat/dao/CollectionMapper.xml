<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frankisko.clipcat.dao.CollectionMapper">
    <resultMap id="collectionRow" type="com.frankisko.clipcat.dto.CollectionRow">
        <id property="idCollection" column="id_collection"/>
        <result property="name" column="name"/>
		<result property="location" column="location"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="mediaCount" column="media_count"/>
    </resultMap>

    <resultMap id="collectionRecord" type="com.frankisko.clipcat.dto.CollectionRecord">
        <result property="name" column="name"/>
		<result property="location" column="location"/>
    </resultMap>

    <select id="getAll" resultMap="collectionRow">

        SELECT
            collections.id_collection, collections.name, collections.location,
            collections.updated_at,
            (
                SELECT COUNT(1)
				FROM media
				WHERE media.id_collection = collections.id_collection
            ) AS media_count
        FROM collections
        ORDER BY collections.id_collection ASC

    </select>

    <select id="getById" resultMap="collectionRecord">

        SELECT
            collections.name, collections.location
        FROM collections
        WHERE collections.id_collection = #{idCollection}

    </select>

    <select id="getLocation" resultType="String">

        SELECT
            collections.location
        FROM collections
        WHERE collections.id_collection = #{idCollection}

    </select>


    <insert id="insert">

        INSERT INTO collections(
            name, location, created_at, updated_at
        ) VALUES (
            #{name}, #{location}, #{createdAt}, #{updatedAt}
        )

    </insert>

    <update id="update">

        UPDATE collections SET
        <foreach item="value" index="key" collection="params" separator=",">
            ${key} = #{value}
        </foreach>
        WHERE id_collection = #{idCollection}

    </update>

    <delete id="delete">

        DELETE
        FROM collections
        WHERE id_collection = #{idCollection}

    </delete>

</mapper>